{"version":3,"sources":["pages/loading.svg","components/global/Title.tsx","components/global/DescripcionCantidad.tsx","components/tablaProductos/TablaProductosHeader.tsx","components/tablaProductos/TablaProductosFila.tsx","components/tablaProductos/TablaProductos.tsx","services/authService.ts","services/baseService.ts","services/productService.ts","pages/ListaProductos.tsx","components/tablaCategorias/TablaCategoriasHeader.tsx","components/tablaCategorias/TablaCategoriasFila.tsx","components/tablaCategorias/TablaCategorias.tsx","services/categoryService.ts","pages/ListaCategorias.tsx","pages/DetalleProducto.tsx","pages/InsertarProducto.tsx","pages/Chat.tsx","App.tsx","index.tsx"],"names":["module","exports","Title","props","textoTitulo","texto","DescripcionCantidad","TablaProductosHeader","TablaProductosFila","key","producto","productId","productName","unitPrice","to","className","onClick","onDeleteProduct","TablaProductos","data","map","productoIterador","onDeleteProducts","obtenerToken","username","password","a","async","axios","post","process","headers","response","refreshToken","localStorage","getItem","obtenerAuthToken","localStorageToken","expirationDateMs","Number","Date","getTime","refreshResult","accessToken","setItem","expiresIn","toString","BASE_URL","obtenerTodos","Authorization","get","resultado","obtenerPorId","insertarProduct","nuevoProducto","deleteProduct","delete","ListaProductos","useState","setData","cargando","setCargando","hubConnection","setHubConnection","cargarProductos","productos","useEffect","setTimeout","newConnection","SignalR","withUrl","build","on","product","start","catch","error","console","descripcionCantidad","length","src","loading","send","TablaCategoriasHeader","TablaCategoriasFila","categoria","categoryName","description","TablaCategorias","categoriaIterador","categoryId","ListaCategorias","categorias","cargarCategorias","DetalleProducto","React","setProduct","getProduct","JSON","stringify","InsertarProducto","mensaje","setMensaje","guardarProducto","resultadoServicio","onSubmit","e","preventDefault","newProduct","target","value","htmlFor","type","name","id","placeholder","Chat","mensajes","setMensajes","nuevoMensaje","setNuevoMensaje","tmpArray","push","nombreUsuario","log","message","then","index","Login","style","maxWidth","tokenData","onAuthenticate","validarCredenciales","Admin","href","clear","onSignOut","role","path","ReactDOM","render","isAuthenticated","setIsAuthenticated","document","getElementById"],"mappings":"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","file":"static/js/main.e31318c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.a1e184b8.svg\";","import React from \"react\";\r\n\r\ninterface IProps {\r\n    texto: string;\r\n}\r\n\r\nexport function Title(props: IProps) {\r\n    const textoTitulo = !props.texto ? \"Título no definido\" : props.texto;\r\n    return <h1>{textoTitulo}</h1>\r\n}","import React from \"react\";\r\n\r\nexport function DescripcionCantidad({ texto }: { texto: string }) {\r\n    return <p>\r\n        {texto}\r\n    </p>\r\n}","import React from \"react\"\r\n\r\nexport function TablaProductosHeader() {\r\n    return <thead>\r\n        <tr>\r\n            <th>Nombre</th>\r\n            <th>Precio Unitario</th>\r\n            <th></th>\r\n        </tr>\r\n    </thead>\r\n}","import React from \"react\";\r\nimport { IProduct } from \"../../types\";\r\nimport { Link } from \"@reach/router\";\r\n\r\ninterface IProps {\r\n    producto: IProduct;\r\n    onDeleteProduct: (productId: number) => Promise<void>;\r\n}\r\n\r\nexport function TablaProductosFila(props: IProps) {\r\n    return <tr key={props.producto.productId}>\r\n        <td>\r\n            {props.producto.productName}\r\n        </td>\r\n        <td>\r\n            {props.producto.unitPrice}\r\n        </td>\r\n        <td>\r\n            <Link to={`/products/${props.producto.productId}`}>Detalle</Link>\r\n            <button className=\"btn btn-link btn-sm\" onClick={() => { props.onDeleteProduct(props.producto.productId) }}>Borrar</button>\r\n        </td>\r\n    </tr>\r\n}","import React from \"react\";\r\nimport { IProduct } from \"../../types\";\r\nimport { TablaProductosHeader } from \"./TablaProductosHeader\";\r\nimport { TablaProductosFila } from \"./TablaProductosFila\";\r\n\r\ninterface IProps {\r\n    data: IProduct[] // un arreglo de IProduct\r\n    onDeleteProducts: (productId: number) => Promise<void>;\r\n}\r\n\r\nexport function TablaProductos(props: IProps) {\r\n    return <table className=\"table table-bordered\">\r\n        <TablaProductosHeader></TablaProductosHeader>\r\n        <tbody>\r\n            {props.data.map((productoIterador) => {\r\n                return <TablaProductosFila key={productoIterador.productId}\r\n                    producto={productoIterador} onDeleteProduct={props.onDeleteProducts}></TablaProductosFila>\r\n            })}\r\n        </tbody>\r\n    </table>\r\n}","import axios from \"axios\";\r\n\r\nexport interface ITokenResponse {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n    expiresIn: number;\r\n}\r\n\r\nexport async function obtenerToken(username: string, password: string): Promise<ITokenResponse> {\r\n    // crear el objeto que vamos a enviar\r\n    const data = { username, password };\r\n    // realizar el post a /account/token\r\n    const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/account/token`, data, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    });\r\n\r\n    // obtener el token de la respuesta\r\n    return response.data as ITokenResponse;\r\n}\r\n\r\nexport async function refreshToken(): Promise<ITokenResponse> {\r\n    // crear el objeto que vamos a enviar\r\n    const data = { refreshToken: localStorage.getItem(\"cibertec-refresh-token\") };\r\n    // realizar el post a /account/token\r\n    const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/account/token/refresh`, data, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    });\r\n\r\n    // obtener el token de la respuesta\r\n    return response.data as ITokenResponse;\r\n}","import { refreshToken } from \"./authService\";\r\n\r\nexport async function obtenerAuthToken(): Promise<string | null> {\r\n    // buscar un token en el local storage\r\n    var localStorageToken = localStorage.getItem(\"cibertec-token\");\r\n\r\n    if (!localStorageToken) {\r\n        // si no existe, entonces retornar null\r\n        return null;\r\n    }\r\n\r\n    // si el token existe en el local storage, verificar si ya expiró\r\n    const expirationDateMs = Number(localStorage.getItem(\"cibertec-token-expiration-ms\"));\r\n\r\n    // debugger;\r\n\r\n    if (new Date().getTime() < expirationDateMs) {\r\n        // significa que el token es vpalido, entonces retornarlo\r\n        return localStorageToken;\r\n    }\r\n\r\n    // en el caso contrario, significa que el token ya expiró\r\n    // obtener un nuevo token, utilizando el refresh token\r\n    const refreshResult = await refreshToken();\r\n\r\n    // escribir el token en el local storage\r\n    if (refreshResult.accessToken) {\r\n        localStorage.setItem(\"cibertec-token\", refreshResult.accessToken);\r\n        localStorage.setItem(\"cibertec-refresh-token\", refreshResult.refreshToken);\r\n        const expirationDateMs = new Date().getTime() + refreshResult.expiresIn * 1000;\r\n        localStorage.setItem(\"cibertec-token-expiration-ms\", expirationDateMs.toString());\r\n    }\r\n\r\n    // retornar el token guardado en el local storage\r\n    return localStorage.getItem(\"cibertec-token\");\r\n}","import axios from \"axios\";\r\nimport { IProduct } from \"../types\";\r\nimport { refreshToken } from \"./authService\";\r\nimport { obtenerAuthToken } from \"./baseService\";\r\n\r\n// url base de los servicios web (proyecto VS 2017)\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport async function obtenerTodos(): Promise<IProduct[]> {\r\n    // obtener el resultado de la solicitud en una variable\r\n    const resultado = await axios.get(`${BASE_URL}/products`, {\r\n        headers: {\r\n            Authorization: `Bearer ${await obtenerAuthToken()}`\r\n        }\r\n    });\r\n    // devolver la data obtenida del resultado, casteandola como un arreglo de IProduct\r\n    return resultado.data as IProduct[];\r\n}\r\n\r\nexport async function obtenerPorId(productId: number): Promise<IProduct> {\r\n    const resultado = await axios.get(`${BASE_URL}/products/${productId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${await obtenerAuthToken()}`\r\n        }\r\n    })\r\n    return resultado.data as IProduct;\r\n}\r\n\r\nexport async function insertarProduct(nuevoProducto: Partial<IProduct>): Promise<string> {\r\n    const resultado = await axios.post(`${BASE_URL}/products`, nuevoProducto, {\r\n        headers: {\r\n            Authorization: `Bearer ${await obtenerAuthToken()}`\r\n        }\r\n    });\r\n    return resultado.data;\r\n}\r\n\r\nexport async function deleteProduct(productId: number): Promise<number> {\r\n    const resultado = await axios.delete(`${BASE_URL}/products/${productId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${await obtenerAuthToken()}`\r\n        }\r\n    });\r\n    return resultado.data;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { IProduct, IPageBaseProps } from \"../types\";\r\nimport { Title } from \"../components/global/Title\";\r\nimport { DescripcionCantidad } from \"../components/global/DescripcionCantidad\";\r\nimport { TablaProductos } from \"../components/tablaProductos/TablaProductos\";\r\nimport { obtenerTodos, deleteProduct } from \"../services/productService\";\r\nimport loading from './loading.svg';\r\nimport { Link } from \"@reach/router\";\r\nimport * as SignalR from \"@aspnet/signalr\";\r\n\r\nexport function ListaProductos(props: IPageBaseProps) {\r\n\r\n    // utilizar el state para manjear una variable data\r\n    const [data, setData] = useState<IProduct[]>([]);\r\n    const [cargando, setCargando] = useState<boolean>(true);\r\n    const [hubConnection, setHubConnection] = useState<SignalR.HubConnection>();\r\n\r\n    async function cargarProductos() {\r\n        var productos = await obtenerTodos();\r\n        setData(productos);\r\n\r\n        // una vez que tengamos respuesta del servicio, ocultar el indicador de cargando\r\n        setCargando(false);\r\n    }\r\n\r\n    // definir un efecto para cuando el componente cargue por primera vez\r\n    useEffect(() => {\r\n        // simular un servicio lento\r\n        setTimeout(() => {\r\n            cargarProductos();\r\n        }, 500);\r\n\r\n        // configurar el hub connection\r\n        // instanciar la conexión\r\n        const newConnection = new SignalR.HubConnectionBuilder().withUrl(`${process.env.REACT_APP_BASE_URL}/producthub`).build();\r\n\r\n        newConnection.on(\"actualizarLista\", function (product) {\r\n            // actualizar la data\r\n            cargarProductos();\r\n        })\r\n\r\n        // iniciar la conexión\r\n        newConnection.start().catch(error => console.error(error));\r\n\r\n        // guardar la conexión en el state\r\n        setHubConnection(newConnection);\r\n    }, [])\r\n\r\n    const borrarProducto = async (productId: number) => {\r\n        const resultadoBorrar = await deleteProduct(productId);\r\n        if (resultadoBorrar > 0) {\r\n            // cargarProductos();\r\n            // llamar al hub de producto para indicarle que tiene que actualizar la lista de los clientes\r\n            if (hubConnection) {\r\n                await hubConnection.send(\"modificarProducto\", {})\r\n            }\r\n        }\r\n    }\r\n\r\n    const descripcionCantidad = `Hay ${data.length} de productos registrados`;\r\n\r\n    // mostrar el indicador de cargando\r\n    if (cargando) {\r\n        return <div className=\"d-flex justify-content-center\">\r\n            <img src={loading}></img>\r\n        </div>\r\n\r\n    }\r\n\r\n    return <div>\r\n        <Title texto=\"Lista de Productos\"></Title>\r\n        <DescripcionCantidad texto={descripcionCantidad}></DescripcionCantidad>\r\n        <Link to=\"/products/insert\" className=\"btn btn-primary btn-sm mb-3\">Crear nuevo producto</Link>\r\n        <TablaProductos data={data} onDeleteProducts={borrarProducto}></TablaProductos>\r\n    </div>\r\n}","import React from \"react\"\r\n\r\nexport function TablaCategoriasHeader() {\r\n    return <thead>\r\n        <tr>\r\n            <th>Nombre</th>\r\n            <th>Descripción</th>\r\n        </tr>\r\n    </thead>\r\n}","import React from \"react\";\r\nimport { ICategory } from \"../../types\";\r\n\r\ninterface IProps {\r\n    categoria: ICategory;\r\n}\r\n\r\nexport function TablaCategoriasFila(props: IProps) {\r\n    return <tr>\r\n        <td>\r\n            {props.categoria.categoryName}\r\n        </td>\r\n        <td>\r\n            {props.categoria.description}\r\n        </td>\r\n    </tr>\r\n}","import React from \"react\";\r\nimport { ICategory } from \"../../types\";\r\nimport { TablaCategoriasHeader } from \"./TablaCategoriasHeader\";\r\nimport { TablaCategoriasFila } from \"./TablaCategoriasFila\";\r\n\r\ninterface IProps {\r\n    data: ICategory[]\r\n}\r\n\r\nexport function TablaCategorias(props: IProps) {\r\n    return <table className=\"table table-bordered\">\r\n        <TablaCategoriasHeader></TablaCategoriasHeader>\r\n        <tbody>\r\n            {props.data.map((categoriaIterador) => {\r\n                return <TablaCategoriasFila key={categoriaIterador.categoryId}\r\n                    categoria={categoriaIterador}></TablaCategoriasFila>\r\n            })}\r\n        </tbody>\r\n    </table>\r\n}","import axios from \"axios\";\r\nimport { ICategory } from \"../types\";\r\n\r\nexport async function obtenerTodos(): Promise<ICategory[]> {\r\n    // obtener el resultado de la solicitud en una variable\r\n    const resultado = await axios.get(`${process.env.REACT_APP_BASE_URL}/categories`, {\r\n        headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"cibertec-token\")}`\r\n        }\r\n    });\r\n\r\n    // devovler la data obtenida del resultado, casteandola como un arreglo de ICategory\r\n    return resultado.data as ICategory[];\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { IProduct, ICategory, IPageBaseProps } from \"../types\";\r\nimport { Title } from \"../components/global/Title\";\r\nimport { DescripcionCantidad } from \"../components/global/DescripcionCantidad\";\r\nimport { TablaCategorias } from \"../components/tablaCategorias/TablaCategorias\";\r\nimport { obtenerTodos } from \"../services/categoryService\";\r\nimport loading from './loading.svg';\r\n\r\nexport function ListaCategorias(props: IPageBaseProps) {\r\n    // utilizar el state para manjear una variable data\r\n    const [data, setData] = useState<ICategory[]>([]);\r\n    const [cargando, setCargando] = useState<boolean>(true);\r\n\r\n    // definir un efecto para cuando el componente cargue por primera vez\r\n    useEffect(() => {\r\n        async function cargarCategorias() {\r\n            var categorias = await obtenerTodos();\r\n            setData(categorias);\r\n\r\n            // una vez que tengamos respuesta del servicio, ocultar el indicador de cargando\r\n            setCargando(false);\r\n        }\r\n\r\n        // simular un servicio lento\r\n        setTimeout(() => {\r\n            cargarCategorias();\r\n        }, 500);\r\n\r\n    }, [])\r\n\r\n    const descripcionCantidad = `Hay ${data.length} de categorías registrados`;\r\n\r\n    // mostrar el indicador de cargando\r\n    if (cargando) {\r\n        return <div className=\"d-flex justify-content-center\">\r\n            <img src={loading}></img>\r\n        </div>\r\n    }\r\n\r\n    return <div>\r\n        <Title texto=\"Lista de Categorías\"></Title>\r\n        <DescripcionCantidad texto={descripcionCantidad}></DescripcionCantidad>\r\n        <TablaCategorias data={data}></TablaCategorias>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { IPageBaseProps, IProduct } from \"../types\";\r\nimport { obtenerPorId } from \"../services/productService\";\r\n\r\ninterface IProps extends IPageBaseProps {\r\n    productId?: number;\r\n}\r\n\r\nexport default function DetalleProducto(props: IProps) {\r\n    // declarar una variable del estado para guardar la info del producto\r\n    const [product, setProduct] = React.useState<IProduct>();\r\n\r\n    React.useEffect(() => {\r\n        async function getProduct(productId: number) {\r\n            const resultado = await obtenerPorId(productId);\r\n            setProduct(resultado);\r\n        }\r\n\r\n        if (props.productId) {\r\n            getProduct(props.productId);\r\n        }\r\n    }, [])\r\n\r\n    return <div>\r\n        Detalle del producto con ID {props.productId}\r\n        <pre>\r\n            {JSON.stringify(product)}\r\n        </pre>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport { IPageBaseProps, IProduct } from \"../types\";\r\nimport { Title } from \"../components/global/Title\";\r\nimport { insertarProduct } from \"../services/productService\";\r\nimport * as SignalR from \"@aspnet/signalr\";\r\n\r\nexport default function InsertarProducto(props: IPageBaseProps) {\r\n    const [mensaje, setMensaje] = React.useState<string>(\"\");\r\n    const [hubConnection, setHubConnection] = React.useState<SignalR.HubConnection>();\r\n\r\n    React.useEffect(() => {\r\n        // instanciar la conexión\r\n        const newConnection = new SignalR.HubConnectionBuilder().withUrl(`${process.env.REACT_APP_BASE_URL}/producthub`).build();\r\n\r\n        // iniciar la conexión\r\n        newConnection.start().catch(error => console.error(error));\r\n\r\n        // guardar la conexión en el state\r\n        setHubConnection(newConnection);\r\n    }, [])\r\n\r\n    const formSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        // obtener los valores que el usuario ha ingresado en el form\r\n        const newProduct: Partial<IProduct> = {}\r\n\r\n        newProduct.productName = e.target[\"productName\"].value;\r\n\r\n        // llamar a la función local para guardar el producto\r\n        guardarProducto(newProduct);\r\n    }\r\n\r\n    const guardarProducto = async (nuevoProducto: Partial<IProduct>) => {\r\n        // llamar al servicio web para insertar el producto\r\n        const resultadoServicio = await insertarProduct(nuevoProducto);\r\n\r\n        // llamar al hub de producto para indicarle que tiene que actualizar la lista de los clientes\r\n        if (hubConnection) {\r\n            await hubConnection.send(\"modificarProducto\", nuevoProducto)\r\n        }\r\n        \r\n        setMensaje(resultadoServicio);\r\n    }\r\n    return <div>\r\n        <Title texto=\"Insertar un Producto\"></Title>\r\n        <form className=\"mt-3\" onSubmit={formSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"productName\">Nombre</label>\r\n                <input className=\"form-control\" type=\"text\" name=\"productName\" id=\"productName\" placeholder=\"Ingresa el nombre del producto\"></input>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Guardar</button>\r\n        </form>\r\n\r\n        <p className=\"mt-3\">Resultado de insertar: {mensaje}</p>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { IPageBaseProps } from \"../types\";\r\nimport * as SignalR from \"@aspnet/signalr\";\r\n\r\ninterface IMensaje {\r\n    username: string;\r\n    message: string;\r\n}\r\n\r\nexport function Chat(props: IPageBaseProps) {\r\n    // crear una variable del state para mantener la conexión con el hub\r\n    const [hubConnection, setHubConnection] = React.useState<SignalR.HubConnection>();\r\n    const [mensajes, setMensajes] = React.useState<IMensaje[]>([]);\r\n    const [nuevoMensaje, setNuevoMensaje] = React.useState<IMensaje>();\r\n\r\n    // configurar un efecto para cuando llega un nuevo mensaje\r\n    React.useEffect(() => {\r\n        // crear un arreglo temporal\r\n        const tmpArray = [...mensajes];\r\n        if (nuevoMensaje) {\r\n            tmpArray.push(nuevoMensaje);\r\n            setMensajes(tmpArray);\r\n        }\r\n    }, [nuevoMensaje])\r\n\r\n    // cuando se carga la página por primera vez, inicializar la conexión\r\n    React.useEffect(() => {\r\n        // instanciar la conexión\r\n        const newConnection = new SignalR.HubConnectionBuilder().withUrl(`${process.env.REACT_APP_BASE_URL}/chathub`).build();\r\n\r\n        // configurar lo que pasa cuando se recibe una señal por parte del hub\r\n        newConnection.on(\"mensajeRecibido\", function (mensaje: string, nombreUsuario: string) {\r\n            console.log(`Se ha recibido el mensaje ${mensaje} del usuario ${nombreUsuario}`)\r\n\r\n            // setear el nuevo mensaje\r\n            setNuevoMensaje({ username: nombreUsuario, message: mensaje });\r\n        })\r\n\r\n        // iniciar la conexión\r\n        newConnection.start().catch(error => console.error(error));\r\n\r\n        // guardar la conexión en el state\r\n        setHubConnection(newConnection);\r\n    }, []);\r\n\r\n    const onHandleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        // obtener el input del usuario\r\n        const mensaje = e.target[\"mensaje\"].value;\r\n        const nombreUsuario = e.target[\"nombreUsuario\"].value;\r\n\r\n        // enviar los valores al hub\r\n        if (hubConnection) {\r\n            hubConnection.send(\"enviarMensaje\", mensaje, nombreUsuario).then(() => console.log(\"se envió el mensaje\"))\r\n        }\r\n    }\r\n\r\n    // método para mostrar los mensajes\r\n    const mostrarMensajes = () => {\r\n        const listaMensajesVista = mensajes.map((mensaje, index) => {\r\n            return <li key={index}>\r\n                <b>{mensaje.username}</b>: {mensaje.message}\r\n            </li>\r\n        })\r\n\r\n        return listaMensajesVista;\r\n    }\r\n\r\n    return <div>\r\n        <h2>Chat</h2>\r\n        <form onSubmit={onHandleSubmit}>\r\n            <input type=\"text\" name=\"nombreUsuario\"></input>\r\n            <input type=\"text\" name=\"mensaje\"></input>\r\n            <button>Enviar</button>\r\n        </form>\r\n        <div>\r\n            <h2>Mensajes</h2>\r\n            <ul id=\"lista-mensajes\">\r\n                {mostrarMensajes()}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport \"./App.css\"\r\nimport { Link, Router } from \"@reach/router\";\r\nimport { ListaProductos } from \"./pages/ListaProductos\";\r\nimport { ListaCategorias } from \"./pages/ListaCategorias\";\r\nimport DetalleProducto from \"./pages/DetalleProducto\";\r\nimport InsertarProducto from \"./pages/InsertarProducto\";\r\nimport { obtenerToken } from \"./services/authService\";\r\nimport { Chat } from \"./pages/Chat\";\r\n\r\ninterface ILoginProps {\r\n    onAuthenticate: () => void;\r\n}\r\n\r\nfunction Login(props: ILoginProps) {\r\n    const validarCredenciales = async (username: string, password: string) => {\r\n        const tokenData = await obtenerToken(username, password);\r\n        console.log(\"nuevo token\", tokenData.accessToken);\r\n        // escribir el token en el local storage\r\n        if (tokenData.accessToken) {\r\n            localStorage.setItem(\"cibertec-token\", tokenData.accessToken);\r\n            localStorage.setItem(\"cibertec-refresh-token\", tokenData.refreshToken);\r\n            const expirationDateMs = new Date().getTime() + tokenData.expiresIn * 1000;\r\n            localStorage.setItem(\"cibertec-token-expiration-ms\", expirationDateMs.toString());\r\n        }\r\n\r\n        // mostrar el admin\r\n        props.onAuthenticate();\r\n    }\r\n\r\n    const iniciarSesion = (e: any) => {\r\n        e.preventDefault();\r\n        console.log(\"Se va a iniciar sesión\");\r\n        const username = e.target[\"username\"].value;\r\n        const password = e.target[\"password\"].value;\r\n        validarCredenciales(username, password);\r\n    }\r\n    return <div className=\"container-fluid shadow-sm p-3 mb-5 bg-white rounded mt-5\" style={{ maxWidth: 480 }}>\r\n        <h2 className=\"mb-3\">Iniciar Sesión</h2>\r\n        <form onSubmit={iniciarSesion}>\r\n            <div className=\"form-group\">\r\n                <label>Usuario</label>\r\n                <input type=\"text\" name=\"username\" className=\"form-control\"></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Contraseña</label>\r\n                <input type=\"password\" name=\"password\" className=\"form-control\"></input>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-primary\">Iniciar</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\ninterface IAdminProps {\r\n    onSignOut: () => void;\r\n}\r\n\r\nfunction Admin(props: IAdminProps) {\r\n    return <>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n            <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"#\">Company name</a>\r\n            <input className=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" />\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap\">\r\n                    <a className=\"nav-link\" href=\"#\" onClick={() => {\r\n                        // borrar el local storage\r\n                        localStorage.clear();\r\n                        props.onSignOut();\r\n                    }}>Cerrar Sesión</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        \r\n\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n                    <div className=\"sidebar-sticky\">\r\n                        <ul className=\"nav flex-column\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/products\">Productos</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/categories\">Categorías</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/chat\">Chat</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n                    {/* Estas son las rutas disponibles para redireccionar */}\r\n                    <Router>\r\n                        <ListaProductos path=\"/products\"></ListaProductos>\r\n                        <ListaCategorias path=\"/categories\"></ListaCategorias>\r\n                        <DetalleProducto path=\"/products/:productId\"></DetalleProducto>\r\n                        <InsertarProducto path=\"/products/insert\"></InsertarProducto>\r\n                        <Chat path=\"/chat\"></Chat>\r\n                    </Router>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default function App() {\r\n    const [isAuthenticated, setIsAuthenticated] = React.useState<boolean>(false);\r\n\r\n    // comprobar si existe un token\r\n    React.useEffect(() => {\r\n        if (localStorage.getItem(\"cibertec-token\")) {\r\n            setIsAuthenticated(true);\r\n        }\r\n    }, []);\r\n\r\n    if (!isAuthenticated) {\r\n        return <Login onAuthenticate={() => { setIsAuthenticated(true) }} />\r\n    }\r\n    return <Admin onSignOut={() => { setIsAuthenticated(false) }} />\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// importar toda la librería de bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from './App';\nimport { ListaProductos } from './pages/ListaProductos';\nimport { Contador } from './components/Ejercicios';\nimport { ListaCategorias } from './pages/ListaCategorias';\n\n// ReactDOM.render(<Contador />, document.getElementById('root'));\n// ReactDOM.render(<ListaProductos />, document.getElementById('root'));\n// ReactDOM.render(<ListaCategorias />, document.getElementById('root'));\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<h1>Hola mundo</h1>, document.getElementById('root'));\n\nconst titulo = <h1>Hola mundo</h1>;\n\nconst tabla = <table>\n    <thead>\n        <tr>\n            <th>\n                Columna1\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Valor 1</td>\n        </tr>\n        <tr>\n            <td>Valor 2</td>\n        </tr>\n    </tbody>\n</table>\n\n// ReactDOM.render(tabla, document.getElementById('root'));"],"sourceRoot":""}